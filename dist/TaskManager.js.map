{"version":3,"sources":["../jsSrc/scripts/TaskManager.js"],"names":["state","activeList","id","name","activeTaskId","lists","tasks","getElementsIn","isDone","result","type","task","getElementById","getPosition","sortByPosition","a","b","sortPositionsAfterRemove","sortGroup","el","accIndex","eventFunctions","select","target","buttons","replace","replaceType","upDownPos","mainElement","secondaryElement","startOutOfTurn","doneUndone","remove","areaName","getSelectedElementId","nextElement","selectButtons","list","removeAble","removeDisable","doneTask","render","ulForLists","document","mutability","li","liButtons","button","elements","ulForTasks","ulForDoneTasks","init","upButton","downButton","startOutOfTurnButton","doneButton","undoneButton","removeButton","listForm","doneTasks","taskForm","selectedTask","e","formData","value","_","position","parentList","generalList","completeTask"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\n// import WatchJS from 'watchjs';\r\n//\r\n// const { watch } = WatchJS;\r\n\r\nconst state = {\r\n  activeList: {\r\n    id: null,\r\n    name: '',\r\n  },\r\n  activeTaskId: null,\r\n  lists: [],\r\n  tasks: [],\r\n};\r\n\r\nconst getElementsIn = (type, isDone = false) => {\r\n  const result = (type === 'list' ? state.lists : (state.tasks\r\n    .filter((task) => (task.parentList === state.activeList.name && task.isDone === isDone))\r\n  ));\r\n  return result;\r\n};\r\n\r\nconst getElementById = (id, type = 'task') => (\r\n  [...getElementsIn(type), ...getElementsIn(type, true)].find((task) => task.id === id)\r\n);\r\n\r\nconst getPosition = (type, isDone = false) => getElementsIn(type, isDone).length;\r\n\r\nconst sortByPosition = (a, b) => a.position - b.position;\r\n\r\nconst sortPositionsAfterRemove = (type, isDone) => {\r\n  const sortGroup = getElementsIn(type, isDone);\r\n  sortGroup.sort(sortByPosition)\r\n    .reduce((accIndex, el) => {\r\n      el.position = accIndex;\r\n      return accIndex + 1;\r\n    }, 0);\r\n};\r\n\r\nconst eventFunctions = {\r\n  lists: {\r\n    select: ({ target }) => {\r\n      const { id, name } = target.dataset;\r\n      state.activeList = { id, name };\r\n      state.render();\r\n    },\r\n  },\r\n  buttons: {\r\n    replace: ({ target }) => {\r\n      const replaceType = target.dataset.buttonFunc;\r\n      const { type, id } = target.parentNode.dataset;\r\n      const upDownPos = (replaceType === 'up' ? -1 : 1);\r\n      const mainElement = getElementById(id, type);\r\n      const secondaryElement = getElementsIn(type).find((task) => (\r\n        task.position === mainElement.position + upDownPos\r\n      ));\r\n      if (!secondaryElement) return;\r\n      mainElement.position += upDownPos;\r\n      secondaryElement.position -= upDownPos;\r\n      state.render();\r\n    },\r\n    startOutOfTurn: ({ target }) => {\r\n      const { id } = target.parentNode.dataset;\r\n      state.activeTaskId = id;\r\n      state.mainState.setDefault(false);\r\n      state.render();\r\n    },\r\n    doneUndone: ({ target }) => {\r\n      const { type, id } = target.parentNode.dataset;\r\n      const task = getElementById(id);\r\n      task.isDone = !task.isDone;\r\n      task.position = getPosition(type, task.isDone);\r\n      sortPositionsAfterRemove(type, false);\r\n      sortPositionsAfterRemove(type, true);\r\n      state.render();\r\n    },\r\n    remove: ({ target }) => {\r\n      const { type, id } = target.parentNode.dataset;\r\n      const isDone = getElementById(id, type).isDone;\r\n      const areaName = `${type}s`;\r\n      state[areaName] = state[areaName].filter((el) => el.id !== id);\r\n      sortPositionsAfterRemove(type, isDone);\r\n      state.render();\r\n    },\r\n  },\r\n};\r\n\r\nconst getSelectedElementId = () => {\r\n  if (state.activeTaskId !== null) return state.activeTaskId;\r\n  const nextElement = getElementsIn('task').sort(sortByPosition)[0];\r\n  return (nextElement ? nextElement.id : null);\r\n};\r\n\r\nconst selectButtons = {\r\n  list: {\r\n    removeAble: ['up', 'down', 'remove'],\r\n    removeDisable: ['up', 'down'],\r\n  },\r\n  task: ['up', 'down', 'startOutOfTurn', 'done', 'remove'],\r\n  doneTask: ['undone', 'remove'],\r\n};\r\n\r\nconst render = (elements) => {\r\n  const ulForLists = document.createElement('ul');\r\n  state.lists.sort(sortByPosition)\r\n    .forEach(({ id, name, mutability }) => {\r\n      const li = document.createElement('li');\r\n      li.dataset.type = 'list';\r\n      li.dataset.id = id;\r\n      li.dataset.name = name;\r\n      if (id === state.activeList.id) li.classList.add('selected');\r\n      li.textContent = name;\r\n      li.addEventListener('click', eventFunctions.lists.select);\r\n      const liButtons = elements.buttons.filter(({ type }) => selectButtons.list[mutability].includes(type))\r\n        .map(({ button }) => button.cloneNode(true))\r\n        .map((button) => {\r\n          button.addEventListener('click', eventFunctions.buttons[button.dataset.buttonType]);\r\n          return button;\r\n        });\r\n      li.append(...liButtons);\r\n      ulForLists.appendChild(li);\r\n    });\r\n  elements.lists.innerHTML = '';\r\n  elements.lists.appendChild(ulForLists);\r\n\r\n  const ulForTasks = document.createElement('ul');\r\n  getElementsIn('task', false).sort(sortByPosition)\r\n    .forEach(({ id, name }) => {\r\n      const li = document.createElement('li');\r\n      li.dataset.id = id;\r\n      if (id === getSelectedElementId()) li.classList.add('selected');\r\n      li.textContent = name;\r\n      li.dataset.type = 'task';\r\n      const liButtons = elements.buttons.filter(({ type }) => selectButtons.task.includes(type))\r\n        .map(({ button }) => button.cloneNode(true))\r\n        .map((button) => {\r\n          button.addEventListener('click', eventFunctions.buttons[button.dataset.buttonType]);\r\n          return button;\r\n        });\r\n      li.append(...liButtons);\r\n      ulForTasks.appendChild(li);\r\n    });\r\n  elements.tasks.innerHTML = '';\r\n  elements.tasks.appendChild(ulForTasks);\r\n\r\n  const ulForDoneTasks = document.createElement('ul');\r\n  getElementsIn('task', true).sort(sortByPosition)\r\n    .forEach(({ id, name }) => {\r\n      const li = document.createElement('li');\r\n      li.dataset.id = id;\r\n      li.textContent = name;\r\n      li.dataset.type = 'doneTask';\r\n      const liButtons = elements.buttons.filter(({ type }) => selectButtons.doneTask.includes(type))\r\n        .map(({ button }) => button.cloneNode(true))\r\n        .map((button) => {\r\n          button.addEventListener('click', eventFunctions.buttons[button.dataset.buttonType]);\r\n          return button;\r\n        });\r\n      li.append(...liButtons);\r\n      ulForDoneTasks.appendChild(li);\r\n    });\r\n  elements.doneTasks.innerHTML = '';\r\n  elements.doneTasks.appendChild(ulForDoneTasks);\r\n\r\n  elements.listForm.reset();\r\n  elements.taskForm.reset();\r\n};\r\n\r\nconst init = (mainState) => {\r\n  const upButton = document.createElement('button');\r\n  upButton.dataset.buttonType = 'replace';\r\n  upButton.dataset.buttonFunc = 'up';\r\n  upButton.textContent = 'up';\r\n  const downButton = document.createElement('button');\r\n  downButton.dataset.buttonType = 'replace';\r\n  downButton.dataset.buttonFunc = 'down';\r\n  downButton.textContent = 'down';\r\n  const startOutOfTurnButton = document.createElement('button');\r\n  startOutOfTurnButton.dataset.buttonType = 'startOutOfTurn';\r\n  startOutOfTurnButton.textContent = 'start now';\r\n  const doneButton = document.createElement('button');\r\n  doneButton.dataset.buttonType = 'doneUndone';\r\n  doneButton.textContent = 'done';\r\n  const undoneButton = document.createElement('button');\r\n  undoneButton.dataset.buttonType = 'doneUndone';\r\n  undoneButton.textContent = 'undone';\r\n  const removeButton = document.createElement('button');\r\n  removeButton.dataset.buttonType = 'remove';\r\n  removeButton.textContent = 'remove';\r\n\r\n  const buttons = [\r\n    { type: 'up', button: upButton },\r\n    { type: 'down', button: downButton },\r\n    { type: 'startOutOfTurn', button: startOutOfTurnButton },\r\n    { type: 'done', button: doneButton },\r\n    { type: 'undone', button: undoneButton },\r\n    { type: 'remove', button: removeButton },\r\n  ];\r\n\r\n  const elements = {\r\n    lists: document.querySelector('[data-container=\"lists\"]'),\r\n    listForm: document.querySelector('[data-container=\"new-list-form\"]'),\r\n    tasks: document.querySelector('[data-container=\"tasks\"]'),\r\n    doneTasks: document.querySelector('[data-container=\"done-tasks\"]'),\r\n    taskForm: document.querySelector('[data-container=\"new-task-form\"]'),\r\n    selectedTask: document.querySelector('[data-container=\"selected-task\"]'),\r\n    buttons,\r\n  };\r\n\r\n  elements.listForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '' && !state.lists[value]) {\r\n      state.lists.push({\r\n        id: _.uniqueId(),\r\n        name: value,\r\n        position: getPosition('list'),\r\n        mutability: 'removeAble',\r\n      });\r\n    }\r\n    state.render();\r\n  });\r\n\r\n  elements.taskForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '' && !state.tasks[value]) {\r\n      const task = {\r\n        id: _.uniqueId(),\r\n        parentList: state.activeList.name,\r\n        name: value,\r\n        position: getPosition('task'),\r\n        isDone: false,\r\n      };\r\n      state.tasks.push(task);\r\n      state.render();\r\n    }\r\n  });\r\n\r\n  state.mainState = mainState;\r\n  state.render = () => render(elements);\r\n\r\n  const generalList = {\r\n    id: _.uniqueId(),\r\n    name: 'General',\r\n    position: getPosition('list'),\r\n    mutability: 'removeDisable',\r\n  };\r\n  state.lists.push(generalList);\r\n  state.activeList = { id: generalList.id, name: generalList.name };\r\n  state.render();\r\n};\r\n\r\nconst completeTask = () => {\r\n  const id = getSelectedElementId();\r\n  if (id === null) return;\r\n  const task = getElementById(id);\r\n  task.isDone = !task.isDone;\r\n  state.activeTaskId = null;\r\n  state.render();\r\n};\r\n\r\nexport default { init, completeTask };\r\n"],"file":"TaskManager.js"}