{"version":3,"sources":["../../jsSrc/scripts/TaskManager.js"],"names":["getElementsIn","isDone","state","task","Error","getElementById","type","sortByPosition","a","b","sortPositionsAfterRemove","sortGroup","el","accIndex","getPosition","getSelectedElementId","nextElement","eventFunctions","lists","select","id","name","button","buttons","replace","replaceType","taskContainer","upDownPos","mainElement","secondaryElement","startOutOfTurn","doneUndone","remove","typeArea","selectButtons","list","isMutable","isActive","doneTask","putButtons","option","e","resetInputs","elements","renderLists","ulForLists","document","li","text","target","currentTarget","allButtons","replaceButt","removeButt","renderTasks","ulForTasks","otherButt","ulForDoneTasks","undoneButt","render","tasks","all","createButtonsModels","upButton","downButton","startOutOfTurnButton","doneButton","undoneButton","removeButton","listForm","taskPrompt","taskForm","doneTasks","doneTaskPrompt","selectedTask","activeList","activeTaskId","path","init","formData","value","_","position","parentList","generalList","completeTask","TaskManager"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-unused-expressions */\r\n\r\nimport _ from 'lodash';\r\nimport onChange from 'on-change';\r\n\r\nconst getElementsIn = (state, type, isDone = false) => {\r\n  switch (type) {\r\n    case 'list': {\r\n      return state.lists;\r\n    }\r\n    case 'task': {\r\n      return _.concat(state.tasks)\r\n        .filter((task) => (task.parentList === state.activeList.name && task.isDone === isDone));\r\n    }\r\n    default: {\r\n      throw Error(`Unknown type in function - \"getElementsIn\": ${type}`);\r\n    }\r\n  }\r\n};\r\n\r\nconst getElementById = (state, id, type = 'task') => (\r\n  [...getElementsIn(state, type), ...getElementsIn(state, type, true)]\r\n    .find((task) => task.id === id)\r\n);\r\n\r\nconst sortByPosition = (array) => _.concat(array).sort((a, b) => (a.position - b.position));\r\n\r\nconst sortPositionsAfterRemove = (state, type, isDone) => {\r\n  const sortGroup = getElementsIn(state, type, isDone);\r\n  sortByPosition(sortGroup).reduce((accIndex, el) => {\r\n    el.position = accIndex;\r\n    return accIndex + 1;\r\n  }, 0);\r\n};\r\n\r\nconst getPosition = (state, type, isDone = false) => getElementsIn(state, type, isDone).length;\r\n\r\nconst getSelectedElementId = (state) => {\r\n  if (state.activeTaskId !== null) return state.activeTaskId;\r\n  const nextElement = sortByPosition(getElementsIn(state, 'task'))[0];\r\n  return (nextElement ? nextElement.id : null);\r\n};\r\n\r\nconst eventFunctions = {\r\n  lists: {\r\n    select: (state, button) => {\r\n      const { id, name } = button.dataset;\r\n      state.activeList = { id, name };\r\n    },\r\n  },\r\n  buttons: {\r\n    replace: (state, button) => {\r\n      const replaceType = button.dataset.buttonFunc;\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { type, id } = taskContainer.dataset;\r\n      const upDownPos = (replaceType === 'up' ? -1 : 1);\r\n      const mainElement = getElementById(state, id, type);\r\n      const secondaryElement = getElementsIn(state, type).find((task) => (\r\n        task.position === mainElement.position + upDownPos\r\n      ));\r\n      if (!secondaryElement) return;\r\n      mainElement.position += upDownPos;\r\n      secondaryElement.position -= upDownPos;\r\n    },\r\n    startOutOfTurn: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { id } = taskContainer.dataset;\r\n      state.activeTaskId = id;\r\n      state.mainState.setValues(id);\r\n    },\r\n    doneUndone: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { id } = taskContainer.dataset;\r\n      const task = getElementById(state, id);\r\n      task.isDone = !task.isDone;\r\n      if (task.isDone && getSelectedElementId(state) === id) {\r\n        state.mainState.isDone = !state.mainState.isDone;\r\n      }\r\n      task.position = getPosition(state, 'task', task.isDone);\r\n      sortPositionsAfterRemove(state, 'task', false);\r\n      sortPositionsAfterRemove(state, 'task', true);\r\n    },\r\n    remove: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { type, id } = taskContainer.dataset;\r\n      const typeArea = `${type === 'list' ? 'lists' : 'tasks'}`;\r\n      state[typeArea] = state[typeArea].filter((el) => el.id !== id);\r\n      const isDone = (type === 'doneTask');\r\n      sortPositionsAfterRemove(state, 'task', isDone);\r\n    },\r\n  },\r\n};\r\n\r\nconst selectButtons = {\r\n  list: (isMutable) => (isMutable ? ['up', 'down', 'remove'] : ['up', 'down']),\r\n  task: (isActive) => (isActive ? ['up', 'down', 'done', 'remove'] : ['up', 'down', 'startOutOfTurn', 'done', 'remove']),\r\n  doneTask: () => ['undone', 'remove'],\r\n};\r\n\r\nconst putButtons = (state, elementType, { buttons }, option = null) => (\r\n  buttons.filter(({ type }) => selectButtons[elementType](option).includes(type))\r\n    .map(({ button }) => button.cloneNode(true))\r\n    .map((button) => {\r\n      button.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        eventFunctions.buttons[button.dataset.buttonType](state, e.target);\r\n      });\r\n      return button;\r\n    })\r\n);\r\n\r\nconst resetInputs = (elements) => {\r\n  elements.listForm.reset();\r\n  elements.taskForm.reset();\r\n};\r\n\r\nconst renderLists = (state, elements) => {\r\n  const ulForLists = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state, 'list'))\r\n    .forEach(({ id, name, isMutable }) => {\r\n      const li = document.createElement('li');\r\n      li.dataset.type = 'list';\r\n      li.dataset.id = id;\r\n      li.dataset.name = name;\r\n      const text = document.createElement('p');\r\n      text.textContent = name;\r\n      li.addEventListener('click', ({ target, currentTarget }) => {\r\n        if (currentTarget === target || text === target) eventFunctions.lists.select(state, li);\r\n      });\r\n      const allButtons = putButtons(state, 'list', elements, isMutable);\r\n      const replaceButt = document.createElement('div');\r\n      replaceButt.classList.add('replaceContainer');\r\n      replaceButt.append(...allButtons.filter((b) => b.dataset.buttonType === 'replace'));\r\n      if (id === state.activeList.id) {\r\n        li.classList.add('active');\r\n        li.append(replaceButt, text);\r\n      } else if (!isMutable) {\r\n        li.append(replaceButt, text);\r\n      } else {\r\n        const removeButt = document.createElement('div');\r\n        removeButt.classList.add('removeContainer');\r\n        removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n        li.append(replaceButt, text, removeButt);\r\n      }\r\n      ulForLists.appendChild(li);\r\n    });\r\n  elements.lists.innerHTML = '';\r\n  elements.lists.appendChild(ulForLists);\r\n\r\n  resetInputs(elements);\r\n};\r\nconst renderTasks = (state, elements) => {\r\n  const ulForTasks = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state, 'task', false)).forEach(({ id, name }) => {\r\n    const li = document.createElement('li');\r\n    li.dataset.id = id;\r\n    li.dataset.type = 'task';\r\n    const isActive = (id === getSelectedElementId(state));\r\n    if (isActive) {\r\n      li.classList.add('active');\r\n    }\r\n    const text = document.createElement('p');\r\n    text.textContent = name;\r\n    const allButtons = putButtons(state, 'task', elements, isActive);\r\n    const replaceButt = document.createElement('div');\r\n    replaceButt.classList.add('replaceContainer');\r\n    replaceButt.append(...allButtons.filter((b) => b.dataset.buttonType === 'replace'));\r\n    const removeButt = document.createElement('div');\r\n    removeButt.classList.add('removeContainer');\r\n    removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n    const otherButt = document.createElement('div');\r\n    otherButt.classList.add('otherContainer');\r\n    otherButt.append(...allButtons.filter((b) => (\r\n      b.dataset.buttonType !== 'replace' && b.dataset.buttonType !== 'remove'\r\n    )));\r\n    li.append(replaceButt, text, otherButt, removeButt);\r\n    ulForTasks.appendChild(li);\r\n  });\r\n  elements.tasks.innerHTML = '';\r\n  if (ulForTasks.innerHTML !== '') {\r\n    elements.tasks.appendChild(ulForTasks);\r\n  } else {\r\n    elements.tasks.appendChild(elements.taskPrompt);\r\n  }\r\n\r\n  const ulForDoneTasks = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state, 'task', true)).forEach(({ id, name }) => {\r\n    const li = document.createElement('li');\r\n    li.dataset.id = id;\r\n    li.dataset.type = 'doneTask';\r\n    const text = document.createElement('p');\r\n    text.textContent = name;\r\n    const allButtons = putButtons(state, 'doneTask', elements);\r\n    const removeButt = document.createElement('div');\r\n    removeButt.classList.add('removeContainer');\r\n    removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n    const undoneButt = document.createElement('div');\r\n    undoneButt.classList.add('undoneContainer');\r\n    undoneButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'doneUndone'));\r\n    li.append(undoneButt, text, removeButt);\r\n    ulForDoneTasks.appendChild(li);\r\n  });\r\n  elements.doneTasks.innerHTML = '';\r\n  if (ulForDoneTasks.innerHTML !== '') {\r\n    elements.doneTasks.appendChild(ulForDoneTasks);\r\n  } else {\r\n    elements.doneTasks.appendChild(elements.doneTaskPrompt);\r\n  }\r\n\r\n  resetInputs(elements);\r\n};\r\n\r\nconst render = {\r\n  lists: renderLists,\r\n  tasks: renderTasks,\r\n  all: (state, elements) => {\r\n    renderLists(state, elements);\r\n    renderTasks(state, elements);\r\n  },\r\n};\r\n\r\nconst createButtonsModels = () => {\r\n  const upButton = document.createElement('button');\r\n  upButton.classList.add('up');\r\n  upButton.dataset.buttonType = 'replace';\r\n  upButton.dataset.buttonFunc = 'up';\r\n  const downButton = document.createElement('button');\r\n  downButton.classList.add('down');\r\n  downButton.dataset.buttonType = 'replace';\r\n  downButton.dataset.buttonFunc = 'down';\r\n  const startOutOfTurnButton = document.createElement('button');\r\n  startOutOfTurnButton.classList.add('startOutOfTurn');\r\n  startOutOfTurnButton.dataset.buttonType = 'startOutOfTurn';\r\n  const doneButton = document.createElement('button');\r\n  doneButton.classList.add('done');\r\n  doneButton.dataset.buttonType = 'doneUndone';\r\n  const undoneButton = document.createElement('button');\r\n  undoneButton.classList.add('undone');\r\n  undoneButton.dataset.buttonType = 'doneUndone';\r\n  const removeButton = document.createElement('button');\r\n  removeButton.classList.add('remove');\r\n  removeButton.dataset.buttonType = 'remove';\r\n\r\n  return [\r\n    { type: 'up', button: upButton },\r\n    { type: 'down', button: downButton },\r\n    { type: 'startOutOfTurn', button: startOutOfTurnButton },\r\n    { type: 'done', button: doneButton },\r\n    { type: 'undone', button: undoneButton },\r\n    { type: 'remove', button: removeButton },\r\n  ];\r\n};\r\n\r\nconst elements = {\r\n  lists: document.querySelector('[data-container=\"lists\"]'),\r\n  listForm: document.querySelector('[data-container=\"new-list-form\"]'),\r\n  tasks: document.querySelector('[data-container=\"tasks\"]'),\r\n  taskPrompt: document.querySelector('[data-container=\"tasks-prompt\"]'),\r\n  taskForm: document.querySelector('[data-container=\"new-task-form\"]'),\r\n  doneTasks: document.querySelector('[data-container=\"done-tasks\"]'),\r\n  doneTaskPrompt: document.querySelector('[data-container=\"done-tasks-prompt\"]'),\r\n  selectedTask: document.querySelector('[data-container=\"selected-task\"]'),\r\n  buttons: createButtonsModels(),\r\n};\r\n\r\nconst state = onChange({\r\n  activeList: {\r\n    id: null,\r\n    name: '',\r\n  },\r\n  activeTaskId: null,\r\n  lists: [],\r\n  tasks: [],\r\n}, function (path) {\r\n  (path === 'activeList' ? render.all(this, elements) : null);\r\n  (path === 'activeTaskId' ? render.tasks(this, elements) : null);\r\n  (path.includes('lists') ? render.lists(this, elements) : null);\r\n  (path.includes('tasks') ? render.tasks(this, elements) : null);\r\n});\r\n\r\nconst init = (mainState) => {\r\n  state.mainState = mainState;\r\n\r\n  elements.listForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '') {\r\n      state.lists.push({\r\n        id: _.uniqueId(),\r\n        name: value,\r\n        position: getPosition(state, 'list'),\r\n        isMutable: true,\r\n      });\r\n    }\r\n  });\r\n\r\n  elements.taskForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '') {\r\n      const task = {\r\n        id: _.uniqueId(),\r\n        parentList: state.activeList.name,\r\n        name: value,\r\n        position: getPosition(state, 'task'),\r\n        isDone: false,\r\n      };\r\n      state.tasks.push(task);\r\n    }\r\n  });\r\n\r\n  const generalList = {\r\n    id: _.uniqueId(),\r\n    name: 'General',\r\n    position: getPosition(state, 'list'),\r\n    isMutable: false,\r\n  };\r\n  state.activeList = { id: generalList.id, name: generalList.name };\r\n  state.lists.push(generalList);\r\n};\r\n\r\nconst completeTask = () => {\r\n  const id = getSelectedElementId(state);\r\n  if (id === null) return;\r\n  const task = getElementById(state, id);\r\n  task.isDone = true;\r\n  state.activeTaskId = null;\r\n};\r\n\r\nconst TaskManager = {\r\n  init,\r\n  completeTask,\r\n};\r\n\r\nexport default TaskManager;\r\n"],"file":"TaskManager.js"}