{"version":3,"sources":["../../jsSrc/scripts/TaskManager.js"],"names":["getElementsIn","isDone","type","state","task","getElementById","sortByPosition","a","b","sortPositionsAfterRemove","sortGroup","el","accIndex","getPosition","eventFunctions","lists","select","id","name","button","console","buttons","replace","replaceType","taskContainer","upDownPos","mainElement","secondaryElement","startOutOfTurn","doneUndone","getSelectedElementId","remove","typeArea","nextElement","selectButtons","list","isMutable","isActive","doneTask","putButtons","option","e","resetInputs","elements","renderLists","ulForLists","document","li","text","target","currentTarget","allButtons","replaceButt","removeButt","renderTasks","ulForTasks","otherButt","ulForDoneTasks","undoneButt","render","tasks","all","createButtonsModels","upButton","downButton","startOutOfTurnButton","doneButton","undoneButton","removeButton","listForm","taskPrompt","taskForm","doneTasks","doneTaskPrompt","selectedTask","activeList","activeTaskId","path","init","formData","value","_","position","parentList","generalList","completeTask","TaskManager"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\n// import WatchJS from 'watchjs';\r\n//\r\n// const { watch } = WatchJS;\r\nimport onChange from 'on-change';\r\n\r\nconst getElementsIn = (state, type, isDone = false) => {\r\n  if (type === 'list') return state.lists;\r\n  if (type === 'task') {\r\n    return _.concat(state.tasks).filter((task) => (task.parentList === state.activeList.name && task.isDone === isDone));\r\n  }\r\n};\r\n\r\nconst getElementById = (state, id, type = 'task') => (\r\n  [...getElementsIn(state, type), ...getElementsIn(state, type, true)].find((task) => task.id === id)\r\n);\r\n\r\nconst sortByPosition = (array) => _.concat(array).sort((a, b) => (a.position - b.position));\r\n\r\nconst sortPositionsAfterRemove = (state, type, isDone) => {\r\n  const sortGroup = getElementsIn(state, type, isDone);\r\n  sortByPosition(sortGroup).reduce((accIndex, el) => {\r\n    el.position = accIndex;\r\n    return accIndex + 1;\r\n  }, 0);\r\n};\r\n\r\nconst getPosition = (state, type, isDone = false) => getElementsIn(state, type, isDone).length;\r\n\r\nconst eventFunctions = {\r\n  lists: {\r\n    select: (state, button) => {\r\n      const { id, name } = button.dataset;\r\n      console.log('activeList change');\r\n      state.activeList = { id, name };\r\n    },\r\n  },\r\n  buttons: {\r\n    replace: (state, button) => {\r\n      const replaceType = button.dataset.buttonFunc;\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { type, id } = taskContainer.dataset;\r\n      const upDownPos = (replaceType === 'up' ? -1 : 1);\r\n      const mainElement = getElementById(state, id, type);\r\n      const secondaryElement = getElementsIn(state, type).find((task) => (\r\n        task.position === mainElement.position + upDownPos\r\n      ));\r\n      // console.log(mainElement, secondaryElement, button.parentNode, type, id, upDownPos);\r\n      if (!secondaryElement) return;\r\n      mainElement.position += upDownPos;\r\n      secondaryElement.position -= upDownPos;\r\n    },\r\n    startOutOfTurn: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { id } = taskContainer.dataset;\r\n      state.activeTaskId = id;\r\n      state.mainState.setValues(id);\r\n    },\r\n    doneUndone: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { id } = taskContainer.dataset;\r\n      const task = getElementById(state, id);\r\n      task.isDone = !task.isDone;\r\n      if (task.isDone && getSelectedElementId(state) === id) {\r\n        state.mainState.isDone = !state.mainState.isDone;\r\n      }\r\n      task.position = getPosition(state, 'task', task.isDone);\r\n      sortPositionsAfterRemove(state, 'task', false);\r\n      sortPositionsAfterRemove(state, 'task', true);\r\n    },\r\n    remove: (state, button) => {\r\n      const taskContainer = button.parentNode.parentNode;\r\n      const { type, id } = taskContainer.dataset;\r\n      const typeArea = `${type === 'list' ? 'lists' : 'tasks'}`;\r\n      state[typeArea] = state[typeArea].filter((el) => el.id !== id);\r\n      const isDone = (type === 'doneTask');\r\n      sortPositionsAfterRemove(state, 'task', isDone);\r\n    },\r\n  },\r\n};\r\n\r\nconst getSelectedElementId = (state) => {\r\n  if (state.activeTaskId !== null) return state.activeTaskId;\r\n  const nextElement = sortByPosition(getElementsIn(state, 'task'))[0];\r\n  return (nextElement ? nextElement.id : null);\r\n};\r\n\r\nconst selectButtons = {\r\n  list: (isMutable) => (isMutable ? ['up', 'down', 'remove'] : ['up', 'down']),\r\n  task: (isActive) => (isActive ? ['up', 'down', 'done', 'remove'] : ['up', 'down', 'startOutOfTurn', 'done', 'remove']),\r\n  doneTask: () => ['undone', 'remove'],\r\n};\r\n\r\nconst putButtons = (state, elementType, { buttons }, option = null) => (\r\n  buttons.filter(({ type }) => selectButtons[elementType](option).includes(type))\r\n    .map(({ button }) => button.cloneNode(true))\r\n    .map((button) => {\r\n      button.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        eventFunctions.buttons[button.dataset.buttonType](state, e.target);\r\n      });\r\n      return button;\r\n    })\r\n);\r\n\r\nconst resetInputs = (elements) => {\r\n  elements.listForm.reset();\r\n  elements.taskForm.reset();\r\n};\r\n\r\nconst renderLists = (state, elements) => {\r\n  const ulForLists = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state, 'list'))\r\n    .forEach(({ id, name, isMutable }) => {\r\n      const li = document.createElement('li');\r\n      li.dataset.type = 'list';\r\n      li.dataset.id = id;\r\n      li.dataset.name = name;\r\n      const text = document.createElement('p');\r\n      text.textContent = name;\r\n      li.addEventListener('click', ({ target, currentTarget }) => (\r\n        (currentTarget === target || text === target) ? eventFunctions.lists.select(state, li) : null\r\n      ));\r\n      const allButtons = putButtons(state, 'list', elements, isMutable);\r\n      const replaceButt = document.createElement('div');\r\n      replaceButt.classList.add('replaceContainer');\r\n      replaceButt.append(...allButtons.filter((b) => b.dataset.buttonType === 'replace'));\r\n      if (id === state.activeList.id) {\r\n        li.classList.add('active');\r\n        li.append(replaceButt, text);\r\n      } else if (!isMutable) {\r\n        li.append(replaceButt, text);\r\n      } else {\r\n        const removeButt = document.createElement('div');\r\n        removeButt.classList.add('removeContainer');\r\n        removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n        li.append(replaceButt, text, removeButt);\r\n      }\r\n      ulForLists.appendChild(li);\r\n    });\r\n  elements.lists.innerHTML = '';\r\n  elements.lists.appendChild(ulForLists);\r\n\r\n  resetInputs(elements);\r\n};\r\nconst renderTasks = (state, elements) => {\r\n  const ulForTasks = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state,'task', false)).forEach(({ id, name }) => {\r\n    const li = document.createElement('li');\r\n    li.dataset.id = id;\r\n    li.dataset.type = 'task';\r\n    const isActive = (id === getSelectedElementId(state));\r\n    if (isActive) {\r\n      li.classList.add('active');\r\n    }\r\n    const text = document.createElement('p');\r\n    text.textContent = name;\r\n    const allButtons = putButtons(state, 'task', elements, isActive);\r\n    const replaceButt = document.createElement('div');\r\n    replaceButt.classList.add('replaceContainer');\r\n    replaceButt.append(...allButtons.filter((b) => b.dataset.buttonType === 'replace'));\r\n    const removeButt = document.createElement('div');\r\n    removeButt.classList.add('removeContainer');\r\n    removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n    const otherButt = document.createElement('div');\r\n    otherButt.classList.add('otherContainer');\r\n    otherButt.append(...allButtons.filter((b) => (\r\n      b.dataset.buttonType !== 'replace' && b.dataset.buttonType !== 'remove'\r\n    )));\r\n    li.append(replaceButt, text, otherButt, removeButt);\r\n    ulForTasks.appendChild(li);\r\n  });\r\n  elements.tasks.innerHTML = '';\r\n  if (ulForTasks.innerHTML !== '') {\r\n    elements.tasks.appendChild(ulForTasks);\r\n  } else {\r\n    elements.tasks.appendChild(elements.taskPrompt);\r\n  }\r\n\r\n  const ulForDoneTasks = document.createElement('ul');\r\n  sortByPosition(getElementsIn(state,'task', true)).forEach(({ id, name }) => {\r\n    const li = document.createElement('li');\r\n    li.dataset.id = id;\r\n    li.dataset.type = 'doneTask';\r\n    const text = document.createElement('p');\r\n    text.textContent = name;\r\n    const allButtons = putButtons(state, 'doneTask', elements);\r\n    const removeButt = document.createElement('div');\r\n    removeButt.classList.add('removeContainer');\r\n    removeButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'remove'));\r\n    const undoneButt = document.createElement('div');\r\n    undoneButt.classList.add('undoneContainer');\r\n    undoneButt.appendChild(allButtons.find((b) => b.dataset.buttonType === 'doneUndone'));\r\n    li.append(undoneButt, text, removeButt);\r\n    ulForDoneTasks.appendChild(li);\r\n  });\r\n  elements.doneTasks.innerHTML = '';\r\n  if (ulForDoneTasks.innerHTML !== '') {\r\n    elements.doneTasks.appendChild(ulForDoneTasks);\r\n  } else {\r\n    elements.doneTasks.appendChild(elements.doneTaskPrompt);\r\n  }\r\n\r\n  resetInputs(elements);\r\n};\r\n\r\nconst render = {\r\n  lists: renderLists,\r\n  tasks: renderTasks,\r\n  all: (state, elements) => {\r\n    renderLists(state, elements);\r\n    renderTasks(state,elements);\r\n  },\r\n};\r\n\r\nconst createButtonsModels = () => {\r\n  const upButton = document.createElement('button');\r\n  upButton.classList.add('up');\r\n  upButton.dataset.buttonType = 'replace';\r\n  upButton.dataset.buttonFunc = 'up';\r\n  const downButton = document.createElement('button');\r\n  downButton.classList.add('down');\r\n  downButton.dataset.buttonType = 'replace';\r\n  downButton.dataset.buttonFunc = 'down';\r\n  const startOutOfTurnButton = document.createElement('button');\r\n  startOutOfTurnButton.classList.add('startOutOfTurn');\r\n  startOutOfTurnButton.dataset.buttonType = 'startOutOfTurn';\r\n  const doneButton = document.createElement('button');\r\n  doneButton.classList.add('done');\r\n  doneButton.dataset.buttonType = 'doneUndone';\r\n  const undoneButton = document.createElement('button');\r\n  undoneButton.classList.add('undone');\r\n  undoneButton.dataset.buttonType = 'doneUndone';\r\n  const removeButton = document.createElement('button');\r\n  removeButton.classList.add('remove');\r\n  removeButton.dataset.buttonType = 'remove';\r\n\r\n  return [\r\n    { type: 'up', button: upButton },\r\n    { type: 'down', button: downButton },\r\n    { type: 'startOutOfTurn', button: startOutOfTurnButton },\r\n    { type: 'done', button: doneButton },\r\n    { type: 'undone', button: undoneButton },\r\n    { type: 'remove', button: removeButton },\r\n  ];\r\n};\r\n\r\nconst elements = {\r\n  lists: document.querySelector('[data-container=\"lists\"]'),\r\n  listForm: document.querySelector('[data-container=\"new-list-form\"]'),\r\n  tasks: document.querySelector('[data-container=\"tasks\"]'),\r\n  taskPrompt: document.querySelector('[data-container=\"tasks-prompt\"]'),\r\n  taskForm: document.querySelector('[data-container=\"new-task-form\"]'),\r\n  doneTasks: document.querySelector('[data-container=\"done-tasks\"]'),\r\n  doneTaskPrompt: document.querySelector('[data-container=\"done-tasks-prompt\"]'),\r\n  selectedTask: document.querySelector('[data-container=\"selected-task\"]'),\r\n  buttons: createButtonsModels(),\r\n};\r\n\r\n// let i = 0;\r\nconst state = onChange({\r\n  activeList: {\r\n    id: null,\r\n    name: '',\r\n  },\r\n  activeTaskId: null,\r\n  lists: [],\r\n  tasks: [],\r\n}, function (path, value, previousValue) {\r\n  // if (i > 20) return;\r\n  // console.log('Object changed:', ++i);\r\n  // console.log('this:', this);\r\n  // console.log('path:', path);\r\n  // console.log('value:', value);\r\n  // console.log('previousValue:', previousValue);\r\n  (path === 'activeList' ? render.all(this, elements) : null);\r\n  (path === 'activeTaskId' ? render.tasks(this, elements) : null);\r\n  (path.includes('lists') ? render.lists(this, elements) : null);\r\n  (path.includes('tasks') ? render.tasks(this, elements) : null);\r\n});\r\n\r\nconst init = (mainState) => {\r\n  state.mainState = mainState;\r\n\r\n  elements.listForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '') {\r\n      state.lists.push({\r\n        id: _.uniqueId(),\r\n        name: value,\r\n        position: getPosition(state, 'list'),\r\n        isMutable: true,\r\n      });\r\n    }\r\n  });\r\n\r\n  elements.taskForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const value = formData.get('name');\r\n    if (value !== '') {\r\n      const task = {\r\n        id: _.uniqueId(),\r\n        parentList: state.activeList.name,\r\n        name: value,\r\n        position: getPosition(state, 'task'),\r\n        isDone: false,\r\n      };\r\n      state.tasks.push(task);\r\n    }\r\n  });\r\n\r\n  const generalList = {\r\n    id: _.uniqueId(),\r\n    name: 'General',\r\n    position: getPosition(state, 'list'),\r\n    isMutable: false,\r\n  };\r\n  state.activeList = { id: generalList.id, name: generalList.name };\r\n  state.lists.push(generalList);\r\n};\r\n\r\nconst completeTask = () => {\r\n  const id = getSelectedElementId(state);\r\n  if (id === null) return;\r\n  const task = getElementById(state, id);\r\n  task.isDone = true;\r\n  state.activeTaskId = null;\r\n};\r\n\r\nconst TaskManager = {\r\n  init,\r\n  completeTask,\r\n};\r\n\r\nexport default TaskManager;\r\n"],"file":"TaskManager.js"}