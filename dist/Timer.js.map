{"version":3,"sources":["../../jsSrc/scripts/Timer.js"],"names":["watch","WatchJS","timeManager","preWork","work","preRelax","relax","modeMapping","time","buttons","bgColor","onPause","forTimer","forSkip","askFinish","millisToMinutesAndSeconds","minutes","Math","seconds","updateState","entries","modeName","key","value","state","getMode","modes","currentId","newId","timerFunc","clearInterval","setTimeout","setTimer","setInterval","eventButtonsFunctions","start","pausePlay","finish","restart","skip","render","container","buttonContainer","document","target","currentTarget","type","confirmer","ConfirmationYN","answer","pausePlayButton","init","header","timerContainer","timeZone","buttonsContainer","elements","mainState","run","stop","Timer"],"mappings":"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","sourcesContent":["import WatchJS from 'watchjs';\r\nimport ConfirmationYN from './classes/ConfirmationYN';\r\n\r\nconst { watch } = WatchJS;\r\n\r\nconst timeManager = {\r\n  preWork: 1500,\r\n  work: 1500,\r\n  preRelax: 300,\r\n  relax: 300,\r\n};\r\ntimeManager.longBreak = () => {\r\n  timeManager.preRelax = 900;\r\n  timeManager.relax = 900;\r\n};\r\ntimeManager.shortBreak = () => {\r\n  timeManager.preRelax = 300;\r\n  timeManager.relax = 300;\r\n};\r\n\r\nconst modeMapping = {\r\n  preWork: {\r\n    time: timeManager.work,\r\n    buttons: ['start'],\r\n    bgColor: 'red',\r\n    onPause: null,\r\n    forTimer: false,\r\n    forSkip: null,\r\n    askFinish: false,\r\n  },\r\n  work: {\r\n    time: timeManager.work,\r\n    buttons: ['pausePlay', 'finish', 'restart'],\r\n    bgColor: 'red',\r\n    onPause: false,\r\n    forTimer: true,\r\n    forSkip: true,\r\n    askFinish: false,\r\n  },\r\n  preRelax: {\r\n    time: timeManager.break,\r\n    buttons: ['start', 'skip'],\r\n    bgColor: 'green',\r\n    onPause: null,\r\n    forTimer: false,\r\n    forSkip: true,\r\n    askFinish: false,\r\n  },\r\n  relax: {\r\n    time: timeManager.break,\r\n    buttons: ['pausePlay', 'finish', 'restart'],\r\n    bgColor: 'green',\r\n    onPause: false,\r\n    forTimer: true,\r\n    forSkip: true,\r\n    askFinish: false,\r\n  },\r\n};\r\n\r\nconst millisToMinutesAndSeconds = (time) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time - minutes * 60;\r\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n};\r\n\r\nconst updateState = (state, modeName) => {\r\n  modeMapping[modeName].time = timeManager[modeName];\r\n  const entries = Object.entries({ ...state, modeName, ...modeMapping[modeName] });\r\n  entries.forEach(([key, value]) => {\r\n    state[key] = value;\r\n  });\r\n};\r\n\r\nconst getMode = (current, operation) => {\r\n  const modes = ['preWork', 'work', 'preRelax', 'relax'];\r\n  const currentId = modes.indexOf(current);\r\n  let newId;\r\n  switch (operation) {\r\n    case 'next':\r\n      newId = (modes[currentId + 1] ? currentId + 1 : 0);\r\n      break;\r\n    case 'prev':\r\n      newId = currentId - 1;\r\n      break;\r\n    case 'toStart':\r\n      newId = 0;\r\n      break;\r\n    default:\r\n      throw new Error(`Unknown operation: ${operation}`);\r\n  }\r\n  return modes[newId];\r\n};\r\n\r\nconst timerFunc = (state) => {\r\n  if (state.time !== 0) {\r\n    state.time -= 1;\r\n    return;\r\n  }\r\n  state.time = 0;\r\n  if (state.modeName === 'work') {\r\n    state.taskIsDone();\r\n    return;\r\n  }\r\n  clearInterval(state.timerRuner);\r\n  setTimeout(() => updateState(state, getMode(state.modeName, 'next'), 1000));\r\n};\r\n\r\nconst setTimer = (state) => setInterval(timerFunc, 1000, state);\r\n\r\nconst eventButtonsFunctions = {\r\n  start: (state) => {\r\n    updateState(state, getMode(state.modeName, 'next'));\r\n    state.timerRuner = setTimer(state);\r\n  },\r\n  pausePlay: (state) => {\r\n    state.onPause = !state.onPause;\r\n    if (state.onPause) {\r\n      clearInterval(state.timerRuner);\r\n      return;\r\n    }\r\n    state.timerRuner = setTimer(state);\r\n  },\r\n  finish: (state) => {\r\n    if (state.modeName === 'work') {\r\n      state.taskIsDone();\r\n      return;\r\n    }\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'next'));\r\n  },\r\n  restart: (state) => {\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'prev'));\r\n  },\r\n  skip: (state) => {\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'toStart'));\r\n  },\r\n};\r\n\r\nconst render = {\r\n  bgColor: (containers) => containers.forEach((container) => {\r\n    container.classList.toggle('red');\r\n    container.classList.toggle('green');\r\n  }),\r\n  buttons: (state, container) => {\r\n    container.innerHTML = '';\r\n    state.buttons.forEach((type) => {\r\n      const buttonContainer = document.createElement('button');\r\n      buttonContainer.classList.add(type);\r\n      buttonContainer.dataset.buttonType = type;\r\n      buttonContainer.addEventListener('click', ({ target, currentTarget }) => {\r\n        if (currentTarget === target) {\r\n          if (type === 'finish') {\r\n            if (state.askFinish) return;\r\n            state.askFinish = true;\r\n            const confirmer = new ConfirmationYN();\r\n            const answer = confirmer.ask(target.parentNode);\r\n            watch(answer, 'value', () => {\r\n              confirmer.remove();\r\n              if (answer.value) {\r\n                eventButtonsFunctions[type](state);\r\n              }\r\n              state.askFinish = false;\r\n            });\r\n            return;\r\n          }\r\n          eventButtonsFunctions[type](state);\r\n        }\r\n      });\r\n      container.appendChild(buttonContainer);\r\n    });\r\n  },\r\n  time: ({ time }, container) => {\r\n    container.textContent = millisToMinutesAndSeconds(time);\r\n  },\r\n  pausePlay: ({ onPause }, container) => {\r\n    if (onPause === null) return;\r\n    const pausePlayButton = container.querySelector('[data-button-type=\"pausePlay\"]');\r\n    pausePlayButton.classList.remove(onPause ? 'pause' : 'play');\r\n    pausePlayButton.classList.add(onPause ? 'play' : 'pause');\r\n  },\r\n};\r\n\r\nconst state = {};\r\n\r\nconst init = (mainState) => {\r\n  const header = document.querySelector('header');\r\n  const timerContainer = document.querySelector('[data-container=\"timer-container\"]');\r\n  const timeZone = document.querySelector('[data-container=\"time-zone\"]');\r\n  const buttonsContainer = document.querySelector('[data-container=\"buttons\"]');\r\n\r\n  const elements = {\r\n    header,\r\n    timerContainer,\r\n    timeZone,\r\n    buttonsContainer,\r\n  };\r\n\r\n  watch(state, 'bgColor', () => render.bgColor([elements.header, elements.timerContainer]));\r\n  watch(state, 'buttons', () => render.buttons(state, elements.buttonsContainer));\r\n  watch(state, 'time', () => render.time(state, elements.timeZone));\r\n  watch(state, 'onPause', () => render.pausePlay(state, elements.buttonsContainer));\r\n\r\n  updateState(state, 'preWork');\r\n\r\n  state.taskIsDone = () => {\r\n    mainState.isDone = !mainState.isDone;\r\n  };\r\n};\r\n\r\nconst run = () => {\r\n  clearInterval(state.timerRuner);\r\n  updateState(state, 'work');\r\n  state.timerRuner = setTimer(state);\r\n};\r\nconst stop = () => {\r\n  clearInterval(state.timerRuner);\r\n  updateState(state, getMode(state.modeName, 'next'));\r\n};\r\n\r\nconst Timer = {\r\n  init, run, stop, timeManager,\r\n};\r\n\r\nexport default Timer;\r\n"],"file":"Timer.js"}