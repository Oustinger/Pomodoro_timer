{"version":3,"sources":["../jsSrc/scripts/Timer.js"],"names":["watch","WatchJS","emptyFunc","askConfirmYN","args","confirmContainer","ConfirmationYN","onYes","onNo","timeManager","preWork","work","preRelax","relax","modeMapping","time","buttons","bgColor","onPause","forTimer","forSkip","millisToMinutesAndSeconds","minutes","Math","seconds","updateState","entries","modeName","key","value","state","getMode","modes","currentId","newId","timerFunc","clearInterval","setTimeout","setTimer","setInterval","eventButtonsFunctions","start","pausePlay","finish","restart","stop","skip","render","color","container","buttonContainer","document","target","type","pausePlayButton","init","timerContainer","timeZone","buttonsContainer","elements","mainState","run","Timer"],"mappings":"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","sourcesContent":["import WatchJS from 'watchjs';\r\nimport ConfirmationYN from './classes/ConfirmationYN';\r\n\r\nconst { watch } = WatchJS;\r\n\r\nconst emptyFunc = () => {};\r\n\r\nconst askConfirmYN = (parentElem, onYes, onNo, ...args) => {\r\n  const confirmContainer = new ConfirmationYN();\r\n  watch(confirmContainer.answer, 'value', () => {\r\n    confirmContainer.remove();\r\n    return (confirmContainer.answer.value ? onYes(...args) : onNo(...args));\r\n  });\r\n  confirmContainer.ask(parentElem);\r\n};\r\n\r\nconst timeManager = {\r\n  preWork: 5,\r\n  work: 5,\r\n  preRelax: 5,\r\n  relax: 5,\r\n};\r\ntimeManager.longBreak = () => {\r\n  timeManager.preRelax = 10;\r\n  timeManager.relax = 10;\r\n};\r\ntimeManager.shortBreak = () => {\r\n  timeManager.preRelax = 5;\r\n  timeManager.relax = 5;\r\n};\r\n\r\nconst modeMapping = {\r\n  preWork: {\r\n    time: timeManager.work,\r\n    buttons: ['start'],\r\n    bgColor: 'red',\r\n    onPause: null,\r\n    forTimer: false,\r\n    forSkip: null,\r\n  },\r\n  work: {\r\n    time: timeManager.work,\r\n    buttons: ['pausePlay', 'finish', 'restart', 'stop'],\r\n    bgColor: 'red',\r\n    onPause: false,\r\n    forTimer: true,\r\n    forSkip: true,\r\n  },\r\n  preRelax: {\r\n    time: timeManager.break,\r\n    buttons: ['start', 'skip'],\r\n    bgColor: 'blue',\r\n    onPause: null,\r\n    forTimer: false,\r\n    forSkip: true,\r\n  },\r\n  relax: {\r\n    time: timeManager.break,\r\n    buttons: ['pausePlay', 'finish', 'restart'],\r\n    bgColor: 'blue',\r\n    onPause: false,\r\n    forTimer: true,\r\n    forSkip: true,\r\n  },\r\n};\r\n\r\nconst millisToMinutesAndSeconds = (time) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time - minutes * 60;\r\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n};\r\n\r\nconst updateState = (state, modeName) => {\r\n  modeMapping[modeName].time = timeManager[modeName];\r\n  const entries = Object.entries({ ...state, modeName, ...modeMapping[modeName] });\r\n  entries.forEach(([key, value]) => {\r\n    state[key] = value;\r\n  });\r\n};\r\n\r\nconst getMode = (current, operation) => {\r\n  const modes = ['preWork', 'work', 'preRelax', 'relax'];\r\n  const currentId = modes.indexOf(current);\r\n  let newId;\r\n  switch (operation) {\r\n    case 'next':\r\n      newId = (modes[currentId + 1] ? currentId + 1 : 0);\r\n      break;\r\n    case 'prev':\r\n      newId = currentId - 1;\r\n      break;\r\n    case 'toStart':\r\n      newId = 0;\r\n      break;\r\n    default:\r\n      throw new Error(`Unknown operation: ${operation}`);\r\n  }\r\n  return modes[newId];\r\n};\r\n\r\nconst timerFunc = (state) => {\r\n  if (state.time !== 0) {\r\n    state.time -= 1;\r\n    return;\r\n  }\r\n  state.time = 0;\r\n  if (state.modeName === 'work') state.taskIsDone();\r\n  clearInterval(state.timerRuner);\r\n  setTimeout(() => updateState(state, getMode(state.modeName, 'next'), 1000));\r\n};\r\n\r\nconst setTimer = () => setInterval(timerFunc, 1000, state);\r\n\r\nconst eventButtonsFunctions = {\r\n  start: (state) => {\r\n    updateState(state, getMode(state.modeName, 'next'));\r\n    state.timerRuner = setTimer();\r\n  },\r\n  pausePlay: (state) => {\r\n    state.onPause = !state.onPause;\r\n    if (state.onPause) {\r\n      clearInterval(state.timerRuner);\r\n      return;\r\n    }\r\n    state.timerRuner = setTimer();\r\n  },\r\n  finish: (state) => {\r\n    if (state.modeName === 'work') state.taskIsDone();\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'next'));\r\n  },\r\n  restart: (state) => {\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'prev'));\r\n  },\r\n  stop: (state) => {\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'toStart'));\r\n  },\r\n  skip: (state) => {\r\n    clearInterval(state.timerRuner);\r\n    updateState(state, getMode(state.modeName, 'toStart'));\r\n  },\r\n};\r\n\r\nconst render = {\r\n  bgColor: ({ color }, container) => container.setAttribute('bgColor', `${color}`),\r\n  buttons: (state, container) => {\r\n    container.innerHTML = '';\r\n    state.buttons.forEach((type) => {\r\n      const buttonContainer = document.createElement('button');\r\n      buttonContainer.dataset.buttonType = type;\r\n      buttonContainer.textContent = type;\r\n      buttonContainer.addEventListener('click', ({ target }) => {\r\n        if (type === 'stop') {\r\n          askConfirmYN(target, eventButtonsFunctions[type], emptyFunc, state);\r\n          return;\r\n        }\r\n        eventButtonsFunctions[type](state);\r\n      });\r\n      container.appendChild(buttonContainer);\r\n    });\r\n  },\r\n  time: ({ time }, container) => {\r\n    container.textContent = millisToMinutesAndSeconds(time);\r\n  },\r\n  pausePlay: ({ onPause }, container) => {\r\n    if (onPause === null) return;\r\n    const pausePlayButton = container.querySelector('[data-button-type=\"pausePlay\"]');\r\n    pausePlayButton.textContent = (onPause ? 'resume' : 'pause');\r\n  },\r\n};\r\n\r\nconst state = {};\r\n\r\nconst init = (mainState) => {\r\n  const timerContainer = document.querySelector('[data-container=\"timer\"]');\r\n  const timeZone = document.querySelector('[data-container=\"time-zone\"]');\r\n  const buttonsContainer = document.querySelector('[data-container=\"buttons\"]');\r\n\r\n  const elements = { timerContainer, timeZone, buttonsContainer };\r\n\r\n  watch(state, 'bgColor', () => render.bgColor(state, elements.timerContainer));\r\n  watch(state, 'buttons', () => render.buttons(state, elements.buttonsContainer));\r\n  watch(state, 'time', () => render.time(state, elements.timeZone));\r\n  watch(state, 'onPause', () => render.pausePlay(state, elements.buttonsContainer));\r\n\r\n  updateState(state, 'preWork');\r\n\r\n  state.taskIsDone = () => {\r\n    mainState.isDone = !mainState.isDone;\r\n  };\r\n};\r\n\r\nconst run = () => {\r\n  updateState(state, 'work');\r\n  state.timerRuner = setTimer();\r\n};\r\n\r\nconst Timer = { init, run, timeManager };\r\n\r\nexport default Timer;\r\n"],"file":"Timer.js"}