{"version":3,"sources":["../jsSrc/main.js"],"names":["watch","WatchJS","timeManager","Timer","completeTask","TaskManager","increaseDoneTasks","DoneTasksCounter","state","setDefault","inTurn"],"mappings":";;AAAA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;;;;;;;IAEQA,K,GAAUC,QAAAA,CAAAA,SAAAA,CAAAA,CAAVD,K;IAEAE,W,GAAgBC,MAAAA,CAAAA,SAAAA,CAAAA,CAAhBD,W;IACAE,Y,GAAiBC,YAAAA,CAAAA,SAAAA,CAAAA,CAAjBD,Y;IACAE,iB,GAAsBC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAtBD,iB;AAER,IAAME,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,SAAA,UAAA,GAAmB;AAAA,QAAlBC,MAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAT,IAAS;AAC7BF,IAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACAA,IAAAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;AACD;AAJW,CAAd;AAOAR,KAAK,CAAA,KAAA,EAAA,QAAA,EAAkB,YAAM;AAC3B,MAAIQ,KAAK,CAAT,MAAA,EAAkB;AAChBJ,IAAAA,YAAY;AACZF,IAAAA,WAAW,CAAXA,UAAAA;AACAI,IAAAA,iBAAiB;AACjBE,IAAAA,KAAK,CAALA,UAAAA;AACD;AANHR,CAAK,CAALA;AASAA,KAAK,CAAA,KAAA,EAAA,QAAA,EAAkB,YAAA;AAAA,SAAOQ,KAAK,CAALA,MAAAA,GAAAA,IAAAA,GAAsBL,MAAAA,CAAAA,SAAAA,CAAAA,CAA7B,GAA6BA,EAA7B;AAAvBH,CAAK,CAALA;AAEAA,KAAK,CAACO,iBAAAA,CAAD,SAACA,CAAD,EAAA,eAAA,EAAoCL,WAAW,CAApDF,SAAK,CAALA;AAEAQ,KAAK,CAALA,UAAAA;;AACAH,YAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAAAA,KAAAA;;AACAF,MAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAAAA,KAAAA;;AACAI,iBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA","sourcesContent":["import WatchJS from 'watchjs';\r\nimport Timer from './scripts/Timer';\r\nimport DoneTasksCounter from './scripts/DoneTasksCounter';\r\nimport TaskManager from './scripts/TaskManager';\r\n\r\nconst { watch } = WatchJS;\r\n\r\nconst { timeManager } = Timer;\r\nconst { completeTask } = TaskManager;\r\nconst { increaseDoneTasks } = DoneTasksCounter;\r\n\r\nconst state = {\r\n  setDefault: (inTurn = true) => {\r\n    state.inTurn = inTurn;\r\n    state.isDone = false;\r\n  },\r\n};\r\n\r\nwatch(state, 'isDone', () => {\r\n  if (state.isDone) {\r\n    completeTask();\r\n    timeManager.shortBreak();\r\n    increaseDoneTasks();\r\n    state.setDefault();\r\n  }\r\n});\r\n\r\nwatch(state, 'inTurn', () => (state.inTurn ? null : Timer.run()));\r\n\r\nwatch(DoneTasksCounter, 'needLongBreak', timeManager.longBreak);\r\n\r\nstate.setDefault();\r\nTaskManager.init(state);\r\nTimer.init(state);\r\nDoneTasksCounter.init();\r\n"],"file":"main.js"}